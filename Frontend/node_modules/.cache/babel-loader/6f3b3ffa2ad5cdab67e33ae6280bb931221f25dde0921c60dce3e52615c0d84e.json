{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\javascript\\\\tirgulhomeday9\\\\Frontend\\\\src\\\\Components\\\\DataArea\\\\WhatInTheater\\\\WhatInTheater.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./WhatInTheater.css\";\nimport moviesService from \"../../../Services/movies-service\";\nimport notify from \"../../../Utils/Notify\";\nimport _ from \"lodash\";\nimport DataCard from \"../DataCard/DataCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pageSize = 5;\nfunction WhatInTheater() {\n  _s();\n  const [genre, setGenre] = useState([]);\n  const [movie, setMovie] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postPerPage, setPostPerPage] = useState(4);\n  useEffect(() => {\n    console.log(vacation);\n    try {\n      vacationService.getAllVacation();\n      vacationStore.subscribe(() => {\n        const dup = [...vacationStore.getState().vacation];\n        setVacation(dup);\n      });\n    } catch (err) {\n      alert(err.message);\n    }\n  }, []);\n  function getAllVacation() {\n    // const vacations = +args.target.value;\n    moviesService.getAllMovies().then(movies => setMovie(movies)).then(movies => console.log(mov)).catch(err => alert(err.message));\n  }\n  useEffect(() => {\n    moviesService.getAllGenres().then(genre => setGenre(genre)).catch(err => notify.error(err));\n  }, []);\n\n  // useEffect(() =>{\n  //     moviesService.getAllMovies()\n  //     .then(movie => setMovie(movie))\n  //     .catch(err => notify.error(err))\n  // })\n\n  async function name(args) {\n    try {\n      const genreId = +args.target.value;\n      const dbGenre = await moviesService.getMovieByGenre(genreId);\n      setMovie(dbGenre);\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  // async function name2(args: ChangeEvent<HTMLSelectElement>) {\n  //     try {\n  //         const movieId = +args.target.id\n  //         const dbMovie = await moviesService.getOneMovie(movieId)\n  //         setMovie2(dbMovie)\n  //     }\n  //     catch (err: any) {\n  //         notify.error(err)\n  //     }\n  // }\n\n  const pageCount = posts ? Math.ceil(movie.length / pageSize) : 0;\n  if (pageCount === 1) return null;\n  const pages = _.range(1, pageCount + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WhatInTheater\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination\",\n        children: pages.map(page => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"page-link\",\n          children: page\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      defaultValue: \"\",\n      onChange: name,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        disabled: true,\n        value: \"\",\n        children: \"\\u05D1\\u05D7\\u05E8\\u05D5 \\u05E1\\u05D5\\u05D2 \\u05D4\\u05E7\\u05E8\\u05E0\\u05D4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 18\n      }, this), genre.map(g => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: g.genreId,\n        children: g.genreName\n      }, g.genreId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), movie.map(m => /*#__PURE__*/_jsxDEV(DataCard, {\n      movie: m\n    }, m.movieId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(WhatInTheater, \"jZFx536XGO/4uS3tsrt+gNwMrSs=\");\n_c = WhatInTheater;\nexport default WhatInTheater;\nvar _c;\n$RefreshReg$(_c, \"WhatInTheater\");","map":{"version":3,"names":["useEffect","useState","moviesService","notify","_","DataCard","pageSize","WhatInTheater","genre","setGenre","movie","setMovie","currentPage","setCurrentPage","postPerPage","setPostPerPage","console","log","vacation","vacationService","getAllVacation","vacationStore","subscribe","dup","getState","setVacation","err","alert","message","getAllMovies","then","movies","mov","catch","getAllGenres","error","name","args","genreId","target","value","dbGenre","getMovieByGenre","pageCount","posts","Math","ceil","length","pages","range","map","page","g","genreName","m","movieId"],"sources":["C:/Users/User/Desktop/javascript/tirgulhomeday9/Frontend/src/Components/DataArea/WhatInTheater/WhatInTheater.tsx"],"sourcesContent":["import { ChangeEvent, useEffect, useState } from \"react\";\nimport GenreModel from \"../../../Models/genre-model\";\nimport \"./WhatInTheater.css\";\nimport moviesService from \"../../../Services/movies-service\";\nimport MoviesModel from \"../../../Models/movies-model\";\nimport notify from \"../../../Utils/Notify\";\nimport _ from \"lodash\";\nimport DataCard from \"../DataCard/DataCard\";\nimport { movieStore } from \"../../../Redux/MovieRedux\";\n\nconst pageSize = 5;\n\nfunction WhatInTheater(): JSX.Element {\n\n    const [genre, setGenre] = useState<GenreModel[]>([]);\n    const [movie, setMovie] = useState<MoviesModel[]>([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [postPerPage, setPostPerPage] = useState(4);\n\n    useEffect(() => {\n        console.log(vacation);\n        try {\n            vacationService.getAllVacation()\n\n            vacationStore.subscribe(() => {\n                const dup = [...vacationStore.getState().vacation];\n                setVacation(dup);\n            })\n        } catch (err: any) {\n            alert(err.message)\n        }\n    }, [])\n\n\n    function getAllVacation() {\n\n        // const vacations = +args.target.value;\n        moviesService.getAllMovies()\n        .then(movies => setMovie(movies))\n        .then(movies => console.log(mov))\n        .catch(err => alert(err.message))\n    }\n   \n\n    useEffect(() => {\n        moviesService.getAllGenres()\n            .then(genre => setGenre(genre))\n            .catch(err => notify.error(err))\n    }, [])\n\n    // useEffect(() =>{\n    //     moviesService.getAllMovies()\n    //     .then(movie => setMovie(movie))\n    //     .catch(err => notify.error(err))\n    // })\n\n    async function name(args: ChangeEvent<HTMLSelectElement>) {\n        try {\n            const genreId = +args.target.value;\n            const dbGenre = await moviesService.getMovieByGenre(genreId)\n            setMovie(dbGenre)\n        }\n        catch (err: any) {\n            notify.error(err)\n        }\n    }\n\n\n\n    // async function name2(args: ChangeEvent<HTMLSelectElement>) {\n    //     try {\n    //         const movieId = +args.target.id\n    //         const dbMovie = await moviesService.getOneMovie(movieId)\n    //         setMovie2(dbMovie)\n    //     }\n    //     catch (err: any) {\n    //         notify.error(err)\n    //     }\n    // }\n\n\n    const pageCount = posts ? Math.ceil(movie.length / pageSize) : 0;\n    if (pageCount === 1) return null;\n    const pages = _.range(1, pageCount + 1);\n\n    return (\n        <div className=\"WhatInTheater\">\n\n\n\n            <br />\n\n            <nav className=\"d-flex justify-content-center\">\n                <ul className=\"pagination\">\n\n                    {\n                        pages.map((page) => (\n                            <li className=\"page-link\">{page}</li>\n                        ))\n                    }\n\n                </ul>\n\n\n            </nav>\n\n            <select defaultValue=\"\" onChange={name}>\n                {<option disabled value=\"\">בחרו סוג הקרנה</option>}\n                {genre.map(g => <option key={g.genreId} value={g.genreId}>{g.genreName}</option>)}\n            </select>\n            {/* <select defaultValue=\"\" onChange={}>\n                {<option disabled value=\"\">בחרו סרט </option>}\n                {movie.map(m => <option key={m.movieId} value={m.movieId}>{m.name}</option>)}\n            </select> */}\n            <br />\n            <br />\n            <br />\n            {movie.map(m => <DataCard key={m.movieId} movie={m} />)}\n        </div>\n    );\n}\n\nexport default WhatInTheater;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}