{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\javascript\\\\tirgulhomeday9\\\\Frontend\\\\src\\\\Components\\\\DataArea\\\\DataList\\\\DataList.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport notify from \"../../../Utils/Notify\";\nimport \"./DataList.css\";\nimport DataCard from \"../DataCard/DataCard\";\nimport moviesService from \"../../../Services/movies-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataList() {\n  _s();\n  const [thread, setThread] = useState([]);\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    moviesService.getAllTheaters().then(thread => setThread(thread)).catch(err => notify.error(err));\n  }, []);\n  async function name(args) {\n    try {\n      const theaterId = +args.target.value;\n      const dbTheater = await moviesService.getMovieByTheater(theaterId);\n      setMovie(dbTheater);\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n  async function deleteMe(movieId) {\n    try {\n      if (!window.confirm(\"Are you sure?\")) return;\n      await moviesService.deleteMovie(movieId);\n      notify.success(\"Gift has been deleted\");\n\n      // Refresh list: \n      const duplicateGifts = [...movie];\n      const index = duplicateGifts.findIndex(m => m.movieId === movieId);\n      duplicateGifts.splice(index, 1);\n      setMovie(duplicateGifts);\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DataList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      defaultValue: \"\",\n      onChange: name,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        disabled: true,\n        value: \"\",\n        children: \"select theater\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 18\n      }, this), thread.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: t.theaterId,\n        children: t.theaterName\n      }, t.theaterId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 34\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), movie.map(m => /*#__PURE__*/_jsxDEV(DataCard, {\n      movie: m,\n      deleteMe: deleteMe\n    }, m.movieId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(DataList, \"EGnld+Z4gvb3T2sxhWcNuC/tDQM=\");\n_c = DataList;\nexport default DataList;\nvar _c;\n$RefreshReg$(_c, \"DataList\");","map":{"version":3,"names":["useEffect","useState","notify","DataCard","moviesService","DataList","thread","setThread","movie","setMovie","getAllTheaters","then","catch","err","error","name","args","theaterId","target","value","dbTheater","getMovieByTheater","deleteMe","movieId","window","confirm","deleteMovie","success","duplicateGifts","index","findIndex","m","splice","map","t","theaterName"],"sources":["C:/Users/User/Desktop/javascript/tirgulhomeday9/Frontend/src/Components/DataArea/DataList/DataList.tsx"],"sourcesContent":["import { ChangeEvent, SyntheticEvent, useEffect, useState } from \"react\";\nimport notify from \"../../../Utils/Notify\";\nimport \"./DataList.css\";\nimport { request } from \"http\";\nimport DataCard from \"../DataCard/DataCard\";\nimport TheatersModel from \"../../../Models/theatersId-model\";\nimport MoviesModel from \"../../../Models/movies-model\";\nimport moviesService from \"../../../Services/movies-service\";\n\n\n\nfunction DataList(): JSX.Element {\n\n    const [thread, setThread] = useState<TheatersModel[]>([]);\n    const [movie, setMovie] = useState<MoviesModel[]>([]);\n\n    useEffect(() => {\n        moviesService.getAllTheaters()\n            .then(thread => setThread(thread))\n            .catch(err => notify.error(err))\n    }, [])\n\n\n    async function name(args:ChangeEvent<HTMLSelectElement>) {\n        try{\n            const theaterId = +args.target.value;\n            const dbTheater = await moviesService.getMovieByTheater(theaterId)\n            setMovie(dbTheater)\n        }\n        catch(err:any){\n            notify.error(err)\n        }\n    }\n\n    async function deleteMe(movieId: number) {\n        try {\n            if (!window.confirm(\"Are you sure?\")) return;\n            await moviesService.deleteMovie(movieId);\n            notify.success(\"Gift has been deleted\");\n\n            // Refresh list: \n            const duplicateGifts = [...movie];\n            const index = duplicateGifts.findIndex(m => m.movieId === movieId);\n            duplicateGifts.splice(index, 1);\n            setMovie(duplicateGifts);\n        }\n        catch (err: any) {\n            notify.error(err);\n        }\n    }\n\n    return (\n        <div className=\"DataList\">\n            <h1>list</h1>\n\n            <h3>search</h3>\n\n\n            <select defaultValue=\"\" onChange={name}>\n                {<option disabled value=\"\">select theater</option>}\n                {thread.map(t => <option key={t.theaterId} value={t.theaterId}>{t.theaterName}</option>)}\n            </select>\n            <br />\n            <br />\n            <br />\n            {movie.map(m => <DataCard key={m.movieId} movie={m} deleteMe={deleteMe}/>)} \n        </div>\n    );\n}\n\nexport default DataList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}