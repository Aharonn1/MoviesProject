{"ast":null,"code":"import \"./Home.css\";\n// import imageSource from \"../../../Assets/Images/GiftShop.jpg\";\n// import { type } from \"os\";\n// import { error } from \"console\";\n// import { useReducer } from \"react\";\n\n// const initialState = {\n//     counter: 100,\n// };\n\n// type ACTIONTYPES = \n\n// | {type: \"increment\"; payload:number}\n// | {type: \"decrement\"; payload:number};\n\n// function counterReducer(state:typeof initialState, action: ACTIONTYPES){\n//     switch(action.type){\n//         case \"increment\" : \n//         return{\n//             ...state,\n//             counter: state.counter + action.payload,\n//         };\n//         case \"decrement\" : \n//         return{\n//             ...state,\n//             counter: state.counter - action.payload,\n//         };\n//         default:\n//             throw new Error(\"Bad Action\");\n//     }\n// }\n\n// function Home(): JSX.Element {\n\n//     const[state,dispatch] = useReducer(counterReducer,initialState)\n\n//     return (\n//         <div className=\"Home\">\n//             <h1>home</h1>\n//             <div>{state.counter}</div>\n//             <div>\n//                 <button \n//                 onClick={() => \n//                     dispatch({\n//                     type:\"increment\",\n//                     payload:10\n//                 })\n//                 }>\n//                     increment \n//                 </button>{\" \"}\n\n//                 <button \n//                 onClick={() => \n//                     dispatch({\n//                     type:\"decrement\",\n//                     payload:5\n//                 })\n//                 }>\n//                     decrement \n//                 </button>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Home;\nexport class LikeComponent {\n  constructor(_likesCount, _isSelected) {\n    this._likesCount = _likesCount;\n    this._isSelected = _isSelected;\n  }\n  get likesCount() {\n    return this._likesCount;\n  }\n  get isSelected() {\n    return this._isSelected;\n  }\n  onClick() {\n    // Add 1 to likesCount\n    // Otherwise, add -1 to likesCount, basically decrease the value of likesCount by 1\n    this._likesCount += this._isSelected ? 1 : -1;\n    // Toggle _isSelected field\n    this._isSelected = !this._isSelected;\n  }\n}","map":{"version":3,"names":["LikeComponent","constructor","_likesCount","_isSelected","likesCount","isSelected","onClick"],"sources":["C:/Users/User/Desktop/javascript/tirgulhomeday9/Frontend/src/Components/HomeArea/Home/Home.tsx"],"sourcesContent":["import \"./Home.css\";\n// import imageSource from \"../../../Assets/Images/GiftShop.jpg\";\n// import { type } from \"os\";\n// import { error } from \"console\";\n// import { useReducer } from \"react\";\n\n// const initialState = {\n//     counter: 100,\n// };\n\n// type ACTIONTYPES = \n\n// | {type: \"increment\"; payload:number}\n// | {type: \"decrement\"; payload:number};\n\n// function counterReducer(state:typeof initialState, action: ACTIONTYPES){\n//     switch(action.type){\n//         case \"increment\" : \n//         return{\n//             ...state,\n//             counter: state.counter + action.payload,\n//         };\n//         case \"decrement\" : \n//         return{\n//             ...state,\n//             counter: state.counter - action.payload,\n//         };\n//         default:\n//             throw new Error(\"Bad Action\");\n//     }\n// }\n\n// function Home(): JSX.Element {\n\n//     const[state,dispatch] = useReducer(counterReducer,initialState)\n\n//     return (\n//         <div className=\"Home\">\n//             <h1>home</h1>\n//             <div>{state.counter}</div>\n//             <div>\n//                 <button \n//                 onClick={() => \n//                     dispatch({\n//                     type:\"increment\",\n//                     payload:10\n//                 })\n//                 }>\n//                     increment \n//                 </button>{\" \"}\n\n//                 <button \n//                 onClick={() => \n//                     dispatch({\n//                     type:\"decrement\",\n//                     payload:5\n//                 })\n//                 }>\n//                     decrement \n//                 </button>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Home;\nexport class LikeComponent {\n    constructor(private _likesCount: number, private _isSelected: boolean) {}\n  \n    get likesCount() {\n      return this._likesCount;\n    }\n  \n    get isSelected() {\n      return this._isSelected;\n    }\n  \n    onClick() {\n      // Add 1 to likesCount\n      // Otherwise, add -1 to likesCount, basically decrease the value of likesCount by 1\n      this._likesCount += this._isSelected ? 1 : -1;\n      // Toggle _isSelected field\n      this._isSelected = !this._isSelected;\n    }\n  }"],"mappings":"AAAA,OAAO,YAAY;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,MAAMA,aAAa,CAAC;EACvBC,WAAW,CAASC,WAAmB,EAAUC,WAAoB,EAAE;IAAA,KAAnDD,WAAmB,GAAnBA,WAAmB;IAAA,KAAUC,WAAoB,GAApBA,WAAoB;EAAG;EAExE,IAAIC,UAAU,GAAG;IACf,OAAO,IAAI,CAACF,WAAW;EACzB;EAEA,IAAIG,UAAU,GAAG;IACf,OAAO,IAAI,CAACF,WAAW;EACzB;EAEAG,OAAO,GAAG;IACR;IACA;IACA,IAAI,CAACJ,WAAW,IAAI,IAAI,CAACC,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC;IAC7C;IACA,IAAI,CAACA,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;EACtC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}