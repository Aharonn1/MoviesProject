{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\javascript\\\\tirgulhomeday9\\\\Frontend\\\\src\\\\Components\\\\DataArea\\\\DataCard\\\\DataCard.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./DataCard.css\";\nimport dataService from \"../../../Services/DataService\";\nimport notify from \"../../../Utils/Notify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataCard(props) {\n  _s();\n  const [movie, setMovie] = useState([]);\n  async function deleteMe(movieId) {\n    try {\n      if (!window.confirm(\"Are you sure?\")) return;\n      await dataService.deleteMovie(movieId);\n      notify.success(\"movie has been deleted\");\n\n      // Refresh list: \n      const duplicateGifts = [...movie];\n      const index = duplicateGifts.findIndex(p => p.movieId === props.movie);\n      duplicateGifts.splice(index, 1);\n      setMovie(duplicateGifts);\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DataCard Box\",\n    children: [\"Name: \", props.movie.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), \"Time: \", props.movie.time.slice(0, 10).split(\"-\").reverse().join(\"/\"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), \"Length: \", props.movie.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteMe(props.movie.movieId),\n      children: \"\\u274C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(DataCard, \"N9TxASCHUD7TwNf7J+fFR4tnTaY=\");\n_c = DataCard;\nexport default DataCard;\nvar _c;\n$RefreshReg$(_c, \"DataCard\");","map":{"version":3,"names":["useState","dataService","notify","DataCard","props","movie","setMovie","deleteMe","movieId","window","confirm","deleteMovie","success","duplicateGifts","index","findIndex","p","splice","err","error","name","time","slice","split","reverse","join","length"],"sources":["C:/Users/User/Desktop/javascript/tirgulhomeday9/Frontend/src/Components/DataArea/DataCard/DataCard.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./DataCard.css\";\nimport dataService from \"../../../Services/DataService\";\nimport notify from \"../../../Utils/Notify\";\nimport MovieModel from \"../../../Models/movie-model\";\nimport { NavLink } from \"react-router-dom\";\n\ninterface propsMovieCard{\n    movie:MovieModel\n}\n\nfunction DataCard(props:propsMovieCard): JSX.Element {\n\n    const[movie,setMovie] = useState<MovieModel[]>([]);\n\n    async function deleteMe(movieId: number) {\n        try {\n            if (!window.confirm(\"Are you sure?\")) return;\n            await dataService.deleteMovie(movieId);\n            notify.success(\"movie has been deleted\");\n\n            // Refresh list: \n            const duplicateGifts = [...movie];\n            const index = duplicateGifts.findIndex(p => p.movieId === props.movie);\n            duplicateGifts.splice(index, 1);\n            setMovie(duplicateGifts);\n        }\n        catch (err: any) {\n            notify.error(err);\n        }\n    }\n\n\n    return (\n        <div className=\"DataCard Box\">\n            Name: {props.movie.name}\n            <br />\n            Time: {props.movie.time.slice(0, 10).split(\"-\").reverse().join(\"/\")}\n            <br />\n            Length: {props.movie.length}\n            <br />\n            <button onClick={() => deleteMe(props.movie.movieId)}>‚ùå</button>\n        </div>\n    );\n}\n\nexport default DataCard;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,gBAAgB;AACvB,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,MAAM,MAAM,uBAAuB;AAAC;AAQ3C,SAASC,QAAQ,CAACC,KAAoB,EAAe;EAAA;EAEjD,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGN,QAAQ,CAAe,EAAE,CAAC;EAElD,eAAeO,QAAQ,CAACC,OAAe,EAAE;IACrC,IAAI;MACA,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC,EAAE;MACtC,MAAMT,WAAW,CAACU,WAAW,CAACH,OAAO,CAAC;MACtCN,MAAM,CAACU,OAAO,CAAC,wBAAwB,CAAC;;MAExC;MACA,MAAMC,cAAc,GAAG,CAAC,GAAGR,KAAK,CAAC;MACjC,MAAMS,KAAK,GAAGD,cAAc,CAACE,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACR,OAAO,KAAKJ,KAAK,CAACC,KAAK,CAAC;MACtEQ,cAAc,CAACI,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;MAC/BR,QAAQ,CAACO,cAAc,CAAC;IAC5B,CAAC,CACD,OAAOK,GAAQ,EAAE;MACbhB,MAAM,CAACiB,KAAK,CAACD,GAAG,CAAC;IACrB;EACJ;EAGA,oBACI;IAAK,SAAS,EAAC,cAAc;IAAA,WAAC,QACpB,EAACd,KAAK,CAACC,KAAK,CAACe,IAAI,eACvB;MAAA;MAAA;MAAA;IAAA,QAAM,UACA,EAAChB,KAAK,CAACC,KAAK,CAACgB,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,EAAE,CAACC,IAAI,CAAC,GAAG,CAAC,eACnE;MAAA;MAAA;MAAA;IAAA,QAAM,YACE,EAACrB,KAAK,CAACC,KAAK,CAACqB,MAAM,eAC3B;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAQ,OAAO,EAAE,MAAMnB,QAAQ,CAACH,KAAK,CAACC,KAAK,CAACG,OAAO,CAAE;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9D;AAEd;AAAC,GAjCQL,QAAQ;AAAA,KAARA,QAAQ;AAmCjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}