{"ast":null,"code":"import axios from \"axios\";\nimport appConfig from \"../Utils/AppConfig\";\nimport { movieStore } from \"../Redux/MovieRedux\";\nclass MoviesService {\n  async getAllTheaters() {\n    let theaters = movieStore.getState().movie;\n    if (theaters.length === 0) {\n      const response = await axios.get(appConfig.theatersUrl);\n      theaters = response.data;\n      vacationStore.dispatch({\n        type: VacationActionType.FetchVacation,\n        payload: vacation\n      });\n    }\n    return theaters;\n  }\n  async getMovieByTheater(theaterId) {\n    const response = await axios.get(appConfig.moviesByTheaterUrl + theaterId);\n    const theatersId = response.data;\n    return theatersId;\n  }\n  async addMovie(movie) {\n    const response = await axios.post(appConfig.moviesUrl, movie);\n    const newMovie = response.data;\n    return newMovie;\n  }\n  async deleteMovie(movieId) {\n    await axios.delete(appConfig.moviesUrl + movieId);\n  }\n}\nconst moviesService = new MoviesService();\nexport default moviesService;","map":{"version":3,"names":["axios","appConfig","movieStore","MoviesService","getAllTheaters","theaters","getState","movie","length","response","get","theatersUrl","data","vacationStore","dispatch","type","VacationActionType","FetchVacation","payload","vacation","getMovieByTheater","theaterId","moviesByTheaterUrl","theatersId","addMovie","post","moviesUrl","newMovie","deleteMovie","movieId","delete","moviesService"],"sources":["C:/Users/User/Desktop/javascript/tirgulhomeday9/Frontend/src/Services/movies-service.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport TheatersModel from \"../Models/theatersId-model\";\r\nimport appConfig from \"../Utils/AppConfig\";\r\nimport MoviesModel from \"../Models/movies-model\";\r\nimport { movieStore } from \"../Redux/MovieRedux\";\r\n\r\nclass MoviesService{\r\n\r\n    public async getAllTheaters():Promise<TheatersModel[]>{\r\n        let theaters = movieStore.getState().movie;\r\n        if(theaters.length === 0){\r\n            const response = await axios.get<TheatersModel[]>(appConfig.theatersUrl)\r\n           theaters = response.data;\r\n            vacationStore.dispatch({ type: VacationActionType.FetchVacation, payload: vacation })\r\n        }\r\n        return theaters\r\n    }\r\n\r\n    public async getMovieByTheater(theaterId:number):Promise<MoviesModel[]>{\r\n        const response = await axios.get<MoviesModel[]>(appConfig.moviesByTheaterUrl + theaterId);\r\n        const theatersId = response.data;\r\n        return theatersId;\r\n    }\r\n\r\n    public async addMovie(movie:MoviesModel):Promise<MoviesModel>{\r\n        const response = await axios.post<MoviesModel>(appConfig.moviesUrl, movie);\r\n        const newMovie = response.data;\r\n        return newMovie\r\n    }\r\n\r\n    public async deleteMovie(movieId:number):Promise<void>{\r\n        await axios.delete<MoviesModel>(appConfig.moviesUrl + movieId)\r\n    }\r\n\r\n}\r\n\r\nconst moviesService = new MoviesService();\r\nexport default moviesService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,oBAAoB;AAE1C,SAASC,UAAU,QAAQ,qBAAqB;AAEhD,MAAMC,aAAa;EAEf,MAAaC,cAAc,GAA2B;IAClD,IAAIC,QAAQ,GAAGH,UAAU,CAACI,QAAQ,EAAE,CAACC,KAAK;IAC1C,IAAGF,QAAQ,CAACG,MAAM,KAAK,CAAC,EAAC;MACrB,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAkBT,SAAS,CAACU,WAAW,CAAC;MACzEN,QAAQ,GAAGI,QAAQ,CAACG,IAAI;MACvBC,aAAa,CAACC,QAAQ,CAAC;QAAEC,IAAI,EAAEC,kBAAkB,CAACC,aAAa;QAAEC,OAAO,EAAEC;MAAS,CAAC,CAAC;IACzF;IACA,OAAOd,QAAQ;EACnB;EAEA,MAAae,iBAAiB,CAACC,SAAgB,EAAwB;IACnE,MAAMZ,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAgBT,SAAS,CAACqB,kBAAkB,GAAGD,SAAS,CAAC;IACzF,MAAME,UAAU,GAAGd,QAAQ,CAACG,IAAI;IAChC,OAAOW,UAAU;EACrB;EAEA,MAAaC,QAAQ,CAACjB,KAAiB,EAAsB;IACzD,MAAME,QAAQ,GAAG,MAAMT,KAAK,CAACyB,IAAI,CAAcxB,SAAS,CAACyB,SAAS,EAAEnB,KAAK,CAAC;IAC1E,MAAMoB,QAAQ,GAAGlB,QAAQ,CAACG,IAAI;IAC9B,OAAOe,QAAQ;EACnB;EAEA,MAAaC,WAAW,CAACC,OAAc,EAAe;IAClD,MAAM7B,KAAK,CAAC8B,MAAM,CAAc7B,SAAS,CAACyB,SAAS,GAAGG,OAAO,CAAC;EAClE;AAEJ;AAEA,MAAME,aAAa,GAAG,IAAI5B,aAAa,EAAE;AACzC,eAAe4B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}