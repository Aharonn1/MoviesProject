{"ast":null,"code":"import axios from \"axios\";\nimport appConfig from \"../Utils/AppConfig\";\nimport { TheaterActionType, theaterStore } from \"../Redux/TheaterModel\";\nclass MoviesService {\n  async getAllTheaters() {\n    let theater = theaterStore.getState().theater;\n    if (theater.length === 0) {\n      const response = await axios.get(appConfig.theatersUrl);\n      theater = response.data;\n      theaterStore.dispatch({\n        type: TheaterActionType.getAllTheaters,\n        payload: theater\n      });\n    }\n    return theaters;\n  }\n  async getMovieByTheater(theaterId) {\n    const response = await axios.get(appConfig.moviesByTheaterUrl + theaterId);\n    const theatersId = response.data;\n    return theatersId;\n  }\n  async addMovie(movie) {\n    const response = await axios.post(appConfig.moviesUrl, movie);\n    const newMovie = response.data;\n    return newMovie;\n  }\n  async deleteMovie(movieId) {\n    await axios.delete(appConfig.moviesUrl + movieId);\n  }\n}\nconst moviesService = new MoviesService();\nexport default moviesService;","map":{"version":3,"names":["axios","appConfig","TheaterActionType","theaterStore","MoviesService","getAllTheaters","theater","getState","length","response","get","theatersUrl","data","dispatch","type","payload","theaters","getMovieByTheater","theaterId","moviesByTheaterUrl","theatersId","addMovie","movie","post","moviesUrl","newMovie","deleteMovie","movieId","delete","moviesService"],"sources":["C:/Users/User/Desktop/javascript/tirgulhomeday9/Frontend/src/Services/movies-service.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport TheatersModel from \"../Models/theatersId-model\";\r\nimport appConfig from \"../Utils/AppConfig\";\r\nimport MoviesModel from \"../Models/movies-model\";\r\nimport { movieStore } from \"../Redux/MovieRedux\";\r\nimport { TheaterActionType, theaterStore } from \"../Redux/TheaterModel\";\r\n\r\nclass MoviesService{\r\n\r\n    public async getAllTheaters():Promise<TheatersModel[]>{\r\n        let theater = theaterStore.getState().theater\r\n        if(theater.length === 0){\r\n            const response = await axios.get<TheatersModel[]>(appConfig.theatersUrl)\r\n            theater = response.data;\r\n            theaterStore.dispatch({ type: TheaterActionType.getAllTheaters, payload: theater })\r\n        }\r\n        return theaters\r\n    }\r\n\r\n    public async getMovieByTheater(theaterId:number):Promise<MoviesModel[]>{\r\n        const response = await axios.get<MoviesModel[]>(appConfig.moviesByTheaterUrl + theaterId);\r\n        const theatersId = response.data;\r\n        return theatersId;\r\n    }\r\n\r\n    public async addMovie(movie:MoviesModel):Promise<MoviesModel>{\r\n        const response = await axios.post<MoviesModel>(appConfig.moviesUrl, movie);\r\n        const newMovie = response.data;\r\n        return newMovie\r\n    }\r\n\r\n    public async deleteMovie(movieId:number):Promise<void>{\r\n        await axios.delete<MoviesModel>(appConfig.moviesUrl + movieId)\r\n    }\r\n\r\n}\r\n\r\nconst moviesService = new MoviesService();\r\nexport default moviesService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,oBAAoB;AAG1C,SAASC,iBAAiB,EAAEC,YAAY,QAAQ,uBAAuB;AAEvE,MAAMC,aAAa;EAEf,MAAaC,cAAc,GAA2B;IAClD,IAAIC,OAAO,GAAGH,YAAY,CAACI,QAAQ,EAAE,CAACD,OAAO;IAC7C,IAAGA,OAAO,CAACE,MAAM,KAAK,CAAC,EAAC;MACpB,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAkBT,SAAS,CAACU,WAAW,CAAC;MACxEL,OAAO,GAAGG,QAAQ,CAACG,IAAI;MACvBT,YAAY,CAACU,QAAQ,CAAC;QAAEC,IAAI,EAAEZ,iBAAiB,CAACG,cAAc;QAAEU,OAAO,EAAET;MAAQ,CAAC,CAAC;IACvF;IACA,OAAOU,QAAQ;EACnB;EAEA,MAAaC,iBAAiB,CAACC,SAAgB,EAAwB;IACnE,MAAMT,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAgBT,SAAS,CAACkB,kBAAkB,GAAGD,SAAS,CAAC;IACzF,MAAME,UAAU,GAAGX,QAAQ,CAACG,IAAI;IAChC,OAAOQ,UAAU;EACrB;EAEA,MAAaC,QAAQ,CAACC,KAAiB,EAAsB;IACzD,MAAMb,QAAQ,GAAG,MAAMT,KAAK,CAACuB,IAAI,CAActB,SAAS,CAACuB,SAAS,EAAEF,KAAK,CAAC;IAC1E,MAAMG,QAAQ,GAAGhB,QAAQ,CAACG,IAAI;IAC9B,OAAOa,QAAQ;EACnB;EAEA,MAAaC,WAAW,CAACC,OAAc,EAAe;IAClD,MAAM3B,KAAK,CAAC4B,MAAM,CAAc3B,SAAS,CAACuB,SAAS,GAAGG,OAAO,CAAC;EAClE;AAEJ;AAEA,MAAME,aAAa,GAAG,IAAIzB,aAAa,EAAE;AACzC,eAAeyB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}