{"ast":null,"code":"import axios from \"axios\";\nimport appConfig from \"../Utils/AppConfig\";\nimport { MovieActionType, movieStore } from \"../Redux/MovieRedux\";\nimport { TheaterActionType, theaterStore } from \"../Redux/TheaterModel\";\nimport { genreStore } from \"../Redux/genreModel\";\nclass MoviesService {\n  async getAllTheaters() {\n    let theater = theaterStore.getState().theater;\n    if (theater.length === 0) {\n      const response = await axios.get(appConfig.theatersUrl);\n      theater = response.data;\n      console.log(theater);\n      theaterStore.dispatch({\n        type: TheaterActionType.getAllTheaters,\n        payload: theater\n      });\n    }\n    return theater;\n  }\n  async getAllGenres() {\n    let genre = genreStore.getState().genre;\n    if (genre.length === 0) {\n      const response = await axios.get(appConfig.moviesByGenreUrl);\n      genre = response.data;\n      console.log(genre);\n      theaterStore.dispatch({\n        type: TheaterActionType.getAllTheaters,\n        payload: genre\n      });\n    }\n    return genre;\n  }\n  async getAllMovies() {\n    // let movie = movieStore.getState().movie\n\n    const response = await axios.get(appConfig.moviesUrl);\n    const movie = response.data;\n    console.log(movie);\n    // movieStore.dispatch({ type: MovieActionType.getAllMovies, payload: movie })\n    return movie;\n  }\n  async getMovieByTheater(theaterId) {\n    let theaters = movieStore.getState().movie;\n    let theater = theaters.find(t => t.theaterId === theaterId);\n    if (!theater) {\n      const response = await axios.get(appConfig.moviesByTheaterUrl + theaterId);\n      theaters = response.data;\n      console.log(theaters);\n    }\n    return theaters;\n  }\n  async getMovieByGenre(genreId) {\n    let genres = genreStore.getState().genre;\n    let genre = genres.find(g => t.theat === theaterId);\n    if (!theater) {\n      const response = await axios.get(appConfig.moviesByTheaterUrl + theaterId);\n      theaters = response.data;\n      console.log(theaters);\n    }\n    return theaters;\n  }\n  async addMovie(movie) {\n    // const headers = { \"Content-Type\": \"multipart/form-data\" };\n    const response = await axios.post(appConfig.moviesUrl, movie);\n    const newMovie = response.data;\n    console.log(newMovie);\n    movieStore.dispatch({\n      type: MovieActionType.addMovie,\n      payload: newMovie\n    });\n  }\n  async deleteMovie(movieId) {\n    await axios.delete(appConfig.moviesLikesUrl + movieId);\n    movieStore.dispatch({\n      type: MovieActionType.deleteMovie,\n      payload: movieId\n    });\n  }\n  async addLike(movieId) {\n    const response = await axios.post(appConfig.moviesLikesUrl + movieId);\n    const addedLike = response.data;\n    console.log(addedLike);\n    movieStore.dispatch({\n      type: MovieActionType.Like,\n      payload: movieId\n    });\n    movieStore.dispatch({\n      type: MovieActionType.addLike,\n      payload: movieId\n    });\n  }\n}\nconst moviesService = new MoviesService();\nexport default moviesService;","map":{"version":3,"names":["axios","appConfig","MovieActionType","movieStore","TheaterActionType","theaterStore","genreStore","MoviesService","getAllTheaters","theater","getState","length","response","get","theatersUrl","data","console","log","dispatch","type","payload","getAllGenres","genre","moviesByGenreUrl","getAllMovies","moviesUrl","movie","getMovieByTheater","theaterId","theaters","find","t","moviesByTheaterUrl","getMovieByGenre","genreId","genres","g","theat","addMovie","post","newMovie","deleteMovie","movieId","delete","moviesLikesUrl","addLike","addedLike","Like","moviesService"],"sources":["C:/Users/User/Desktop/javascript/tirgulhomeday9/Frontend/src/Services/movies-service.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport TheatersModel from \"../Models/theatersId-model\";\r\nimport appConfig from \"../Utils/AppConfig\";\r\nimport MoviesModel from \"../Models/movies-model\";\r\nimport { MovieActionType, movieStore } from \"../Redux/MovieRedux\";\r\nimport { TheaterActionType, theaterStore } from \"../Redux/TheaterModel\";\r\nimport { genreStore } from \"../Redux/genreModel\";\r\nimport GenreModel from \"../Models/genre-model\";\r\n\r\nclass MoviesService{\r\n\r\n    public async getAllTheaters():Promise<TheatersModel[]>{\r\n        let theater = theaterStore.getState().theater\r\n        if(theater.length === 0){\r\n            const response = await axios.get<TheatersModel[]>(appConfig.theatersUrl)\r\n            theater = response.data;\r\n            console.log(theater)\r\n            theaterStore.dispatch({ type: TheaterActionType.getAllTheaters, payload: theater })\r\n        }\r\n        return theater\r\n    }\r\n\r\n    public async getAllGenres():Promise<GenreModel[]>{\r\n        let genre = genreStore.getState().genre\r\n        if(genre.length === 0){\r\n            const response = await axios.get<GenreModel[]>(appConfig.moviesByGenreUrl)\r\n            genre = response.data;\r\n            console.log(genre)\r\n            theaterStore.dispatch({ type: TheaterActionType.getAllTheaters, payload: genre })\r\n        }\r\n        return genre\r\n    }\r\n\r\n    public async getAllMovies():Promise<MoviesModel[]>{\r\n        // let movie = movieStore.getState().movie\r\n    \r\n            const response = await axios.get<MoviesModel[]>(appConfig.moviesUrl)\r\n            const movie = response.data;\r\n            console.log(movie)\r\n            // movieStore.dispatch({ type: MovieActionType.getAllMovies, payload: movie })\r\n            return movie\r\n        \r\n    }\r\n\r\n    public async getMovieByTheater(theaterId:number):Promise<MoviesModel[]>{\r\n        let theaters = movieStore.getState().movie\r\n        let theater = theaters.find(t => t.theaterId === theaterId)  \r\n        if(!theater){\r\n            const response = await axios.get<MoviesModel[]>(appConfig.moviesByTheaterUrl + theaterId);\r\n            theaters = response.data;\r\n            console.log(theaters)\r\n        }\r\n        return theaters;\r\n    }\r\n\r\n    public async getMovieByGenre(genreId:number):Promise<GenreModel[]>{\r\n        let genres = genreStore.getState().genre\r\n        let genre = genres.find(g => t.theat === theaterId)  \r\n        if(!theater){\r\n            const response = await axios.get<MoviesModel[]>(appConfig.moviesByTheaterUrl + theaterId);\r\n            theaters = response.data;\r\n            console.log(theaters)\r\n        }\r\n        return theaters;\r\n    }\r\n\r\n    public async addMovie(movie:MoviesModel):Promise<void>{\r\n        // const headers = { \"Content-Type\": \"multipart/form-data\" };\r\n        const response = await axios.post<MoviesModel>(appConfig.moviesUrl, movie);\r\n        const newMovie = response.data;\r\n        console.log(newMovie)\r\n        movieStore.dispatch({type:MovieActionType.addMovie, payload: newMovie})\r\n    }\r\n\r\n    public async deleteMovie(movieId:number):Promise<void>{\r\n        await axios.delete<MoviesModel>(appConfig.moviesLikesUrl + movieId)\r\n        movieStore.dispatch({type:MovieActionType.deleteMovie, payload: movieId})\r\n    }\r\n\r\n    public async addLike(movieId:number):Promise<void>{\r\n        const response = await axios.post(appConfig.moviesLikesUrl + movieId)\r\n        const addedLike = response.data;\r\n        console.log(addedLike)\r\n        movieStore.dispatch({type:MovieActionType.Like, payload: movieId})\r\n        movieStore.dispatch({type:MovieActionType.addLike, payload: movieId})\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nconst moviesService = new MoviesService();\r\nexport default moviesService;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}