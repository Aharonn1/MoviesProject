{"ast":null,"code":"// import { useEffect, useState } from \"react\";\n// import ChairModel from \"../../../Models/chair-model\";\n// import \"./ChairCard.css\";\n// import appConfig from \"../../../Utils/AppConfig\";\n// import React from \"react\";\n// import moviesService from \"../../../Services/movies-service\";\n// import BuyModel from \"../../../Models/buy-model\";\n// import notify from \"../../../Utils/Notify\";\n\n// interface propsCardChair {\n//     chair: ChairModel\n// }\n\n// interface propsCardBuy {\n//     buy: BuyModel\n// }\n\n// function ChairCard(props: propsCardChair, props1: propsCardBuy): JSX.Element {\n\n//     const [chair, setChair] = useState<ChairModel[]>([]);\n//     const [buys, setBuys] = useState<BuyModel[]>([])\n\n//     const [changeColor, setChangeColor] = useState(false);\n\n//     const handleClick = () => {\n//         setChangeColor(!changeColor)\n//     }\n\n//     function chooseChair() {\n//         try {\n//             let buyCount = props.chair.buyCount++;\n//             let changeCount = props.chair.chairCount = 1;\n//             if (changeCount > 0) {\n//                 let chairCount1 = props.chair.chairCount += props.chair.chairCount;\n//                 console.log(changeCount)\n//             }\n//         } catch (err: any) {\n//             notify.error(err)\n//         }\n\n//     }\n\n//     async function buy(): Promise<void> {\n//         try {\n//             moviesService.getAllBuysAfterBuy()\n//                 .then(chair => setBuys(chair))\n//                 .catch(err => alert(err.message))\n\n//             // let buyCount1 = props1.buy.buyCount += props1.buy.buyCount;\n//             let buyCount = props.chair.chairCount += props.chair.chairCount;\n//             // let buyCount3 = props1.buy.price;\n//             let buyId = props.chair.chairId += props.chair.chairId\n//             // console.log(props.buy.buyCount)\n//             if (props.chair.chairCount == 2) {\n\n//                 console.log(\"success\")\n//             } else if (props.chair.chairCount === 8) {\n//                 console.log(\"fail\")\n//                 notify.error(\"השתמשת בכל הכרטיסים\")\n//             } else if (props.chair.chairCount > 2) {\n//                 notify.error(\"הכסא כבר תפוס\")\n//             }\n//             console.log(buyCount)\n//         }\n//         catch (err: any) {\n//             console.error(err)\n//         }\n//     }\n\n//     return (\n//         <div className=\"ChairCard\">\n//             <React.Fragment>\n//                 <section>\n//                     <div className=\"h-screen centered\">\n//                         <button className=\"btn\" onClick={() => buy()}\n\n//                         >click me</button>\n//                     </div>\n//                 </section>\n\n//             </React.Fragment>\n//             <h1></h1>\n\n//             <div className=\"card-content\">\n//                 <div className=\"image-container\">\n//                     <img className=\"img\" src={appConfig.moviesImagesUrl + props.chair.imageName} />\n//                 </div>\n//                 <div className=\"card-title\">\n//                     <h3>{props.chair.chairNumber} :מספר כסא</h3>\n//                 </div>\n//             </div>\n\n//         </div>\n\n//     );\n// }\n\n// export default ChairCard;","map":{"version":3,"names":[],"sources":["C:/Users/User/Desktop/javascript/movies project 6/Frontend/src/Components/DataArea/ChairCard/ChairCard.tsx"],"sourcesContent":["// import { useEffect, useState } from \"react\";\n// import ChairModel from \"../../../Models/chair-model\";\n// import \"./ChairCard.css\";\n// import appConfig from \"../../../Utils/AppConfig\";\n// import React from \"react\";\n// import moviesService from \"../../../Services/movies-service\";\n// import BuyModel from \"../../../Models/buy-model\";\n// import notify from \"../../../Utils/Notify\";\n\n// interface propsCardChair {\n//     chair: ChairModel\n// }\n\n// interface propsCardBuy {\n//     buy: BuyModel\n// }\n\n// function ChairCard(props: propsCardChair, props1: propsCardBuy): JSX.Element {\n\n//     const [chair, setChair] = useState<ChairModel[]>([]);\n//     const [buys, setBuys] = useState<BuyModel[]>([])\n\n//     const [changeColor, setChangeColor] = useState(false);\n\n//     const handleClick = () => {\n//         setChangeColor(!changeColor)\n//     }\n\n//     function chooseChair() {\n//         try {\n//             let buyCount = props.chair.buyCount++;\n//             let changeCount = props.chair.chairCount = 1;\n//             if (changeCount > 0) {\n//                 let chairCount1 = props.chair.chairCount += props.chair.chairCount;\n//                 console.log(changeCount)\n//             }\n//         } catch (err: any) {\n//             notify.error(err)\n//         }\n\n//     }\n\n//     async function buy(): Promise<void> {\n//         try {\n//             moviesService.getAllBuysAfterBuy()\n//                 .then(chair => setBuys(chair))\n//                 .catch(err => alert(err.message))\n\n//             // let buyCount1 = props1.buy.buyCount += props1.buy.buyCount;\n//             let buyCount = props.chair.chairCount += props.chair.chairCount;\n//             // let buyCount3 = props1.buy.price;\n//             let buyId = props.chair.chairId += props.chair.chairId\n//             // console.log(props.buy.buyCount)\n//             if (props.chair.chairCount == 2) {\n\n//                 console.log(\"success\")\n//             } else if (props.chair.chairCount === 8) {\n//                 console.log(\"fail\")\n//                 notify.error(\"השתמשת בכל הכרטיסים\")\n//             } else if (props.chair.chairCount > 2) {\n//                 notify.error(\"הכסא כבר תפוס\")\n//             }\n//             console.log(buyCount)\n//         }\n//         catch (err: any) {\n//             console.error(err)\n//         }\n//     }\n\n\n\n//     return (\n//         <div className=\"ChairCard\">\n//             <React.Fragment>\n//                 <section>\n//                     <div className=\"h-screen centered\">\n//                         <button className=\"btn\" onClick={() => buy()}\n\n//                         >click me</button>\n//                     </div>\n//                 </section>\n\n//             </React.Fragment>\n//             <h1></h1>\n\n//             <div className=\"card-content\">\n//                 <div className=\"image-container\">\n//                     <img className=\"img\" src={appConfig.moviesImagesUrl + props.chair.imageName} />\n//                 </div>\n//                 <div className=\"card-title\">\n//                     <h3>{props.chair.chairNumber} :מספר כסא</h3>\n//                 </div>\n//             </div>\n\n//         </div>\n\n//     );\n// }\n\n// export default ChairCard;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}