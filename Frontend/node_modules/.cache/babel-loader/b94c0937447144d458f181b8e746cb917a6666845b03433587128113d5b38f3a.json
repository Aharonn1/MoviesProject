{"ast":null,"code":"import axios from \"axios\";\nimport appConfig from \"../Utils/AppConfig\";\nimport { MovieActionType, movieStore } from \"../Redux/MovieRedux\";\nimport { TheaterActionType, theaterStore } from \"../Redux/TheaterModel\";\nimport { GenreActionType, genreStore } from \"../Redux/genreModel\";\nclass MoviesService {\n  async getAllTheaters() {\n    let theater = theaterStore.getState().theater;\n    if (theater.length === 0) {\n      const response = await axios.get(appConfig.theatersUrl);\n      theater = response.data;\n      console.log(theater);\n      theaterStore.dispatch({\n        type: TheaterActionType.getAllTheaters,\n        payload: theater\n      });\n    }\n    return theater;\n  }\n  async getAllGenres() {\n    let genre = genreStore.getState().genre;\n    if (genre.length === 0) {\n      const response = await axios.get(appConfig.genresUrl);\n      genre = response.data;\n      console.log(genre);\n      genreStore.dispatch({\n        type: GenreActionType.getAllGenres,\n        payload: genre\n      });\n    }\n    return genre;\n  }\n  async getAllMovies() {\n    let movie = movieStore.getState().movie;\n    if (movie.length === 0) {\n      const response = await axios.get(appConfig.moviesUrl);\n      const movie = response.data;\n      console.log(movie);\n      movieStore.dispatch({\n        type: MovieActionType.getAllMovies,\n        payload: movie\n      });\n    }\n    return movie;\n  }\n  async getMovieByTheater(theaterId) {\n    let theaters = movieStore.getState().movie;\n    let theater = theaters.find(t => t.theaterId === theaterId);\n    if (!theater) {\n      const response = await axios.get(appConfig.moviesByTheaterUrl + theaterId);\n      theaters = response.data;\n      console.log(theaters);\n    }\n    return theaters;\n  }\n  async getMovieByGenre(genreId) {\n    let genres = movieStore.getState().movie;\n    let genre = genres.find(g => g.genreId === genreId);\n    if (!genre) {\n      const response = await axios.get(appConfig.moviesByGenreUrl + genreId);\n      genres = response.data;\n      console.log(genres);\n    }\n    return genres;\n  }\n  async getOneMovie(movieId) {\n    let movies = movieStore.getState().movie;\n    let movie = movies.find(m => m.movieId === movieId);\n    if (!movie) {\n      const response = await axios.get(appConfig.moviesUrl + movieId);\n      movie = response.data;\n      console.log(movie);\n    }\n    return movie;\n  }\n  async addMovie(movie) {\n    // const headers = { \"Content-Type\": \"multipart/form-data\" };\n    const response = await axios.post(appConfig.moviesUrl, movie);\n    const newMovie = response.data;\n    console.log(newMovie);\n    movieStore.dispatch({\n      type: MovieActionType.addMovie,\n      payload: newMovie\n    });\n  }\n  async deleteMovie(movieId) {\n    await axios.delete(appConfig.moviesLikesUrl + movieId);\n    movieStore.dispatch({\n      type: MovieActionType.deleteMovie,\n      payload: movieId\n    });\n  }\n  async addLike(movieId) {\n    const response = await axios.post(appConfig.moviesLikesUrl + movieId);\n    const addedLike = response.data;\n    console.log(addedLike);\n    movieStore.dispatch({\n      type: MovieActionType.Like,\n      payload: movieId\n    });\n    movieStore.dispatch({\n      type: MovieActionType.addLike,\n      payload: movieId\n    });\n  }\n  async getMoviesActive() {\n    const day = new Date()[Symbol];\n    console.log(day);\n    let movies = await this.getAllMovies();\n    const moviesActive = movies.filter(m => new Date(m.date) === day);\n    console.log(moviesActive);\n    await this.getAllMovies();\n    return moviesActive;\n  }\n}\nconst moviesService = new MoviesService();\nexport default moviesService;","map":{"version":3,"names":["axios","appConfig","MovieActionType","movieStore","TheaterActionType","theaterStore","GenreActionType","genreStore","MoviesService","getAllTheaters","theater","getState","length","response","get","theatersUrl","data","console","log","dispatch","type","payload","getAllGenres","genre","genresUrl","getAllMovies","movie","moviesUrl","getMovieByTheater","theaterId","theaters","find","t","moviesByTheaterUrl","getMovieByGenre","genreId","genres","g","moviesByGenreUrl","getOneMovie","movieId","movies","m","addMovie","post","newMovie","deleteMovie","delete","moviesLikesUrl","addLike","addedLike","Like","getMoviesActive","day","Date","Symbol","moviesActive","filter","date","moviesService"],"sources":["C:/Users/User/Desktop/javascript/tirgulhomeday9/Frontend/src/Services/movies-service.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport TheatersModel from \"../Models/theatersId-model\";\r\nimport appConfig from \"../Utils/AppConfig\";\r\nimport MoviesModel from \"../Models/movies-model\";\r\nimport { MovieActionType, movieStore } from \"../Redux/MovieRedux\";\r\nimport { TheaterActionType, theaterStore } from \"../Redux/TheaterModel\";\r\nimport { GenreActionType, genreStore } from \"../Redux/genreModel\";\r\nimport GenreModel from \"../Models/genre-model\";\r\n\r\nclass MoviesService{\r\n\r\n    public async getAllTheaters():Promise<TheatersModel[]>{\r\n        let theater = theaterStore.getState().theater\r\n        if(theater.length === 0){\r\n            const response = await axios.get<TheatersModel[]>(appConfig.theatersUrl)\r\n            theater = response.data;\r\n            console.log(theater)\r\n            theaterStore.dispatch({ type: TheaterActionType.getAllTheaters, payload: theater })\r\n        }\r\n        return theater\r\n    }\r\n\r\n  \r\n\r\n    public async getAllGenres():Promise<GenreModel[]>{\r\n        let genre = genreStore.getState().genre\r\n        if(genre.length === 0){\r\n            const response = await axios.get<GenreModel[]>(appConfig.genresUrl)\r\n            genre = response.data;\r\n            console.log(genre)\r\n            genreStore.dispatch({ type: GenreActionType.getAllGenres, payload: genre })\r\n        }\r\n        return genre\r\n    }\r\n\r\n    public async getAllMovies():Promise<MoviesModel[]>{\r\n        let movie = movieStore.getState().movie\r\n        if(movie.length === 0){\r\n            const response = await axios.get<MoviesModel[]>(appConfig.moviesUrl)\r\n            const movie = response.data;\r\n            console.log(movie)\r\n            movieStore.dispatch({ type: MovieActionType.getAllMovies, payload: movie })\r\n        }\r\n            return movie\r\n        \r\n    }\r\n\r\n    public async getMovieByTheater(theaterId:number):Promise<MoviesModel[]>{\r\n        let theaters = movieStore.getState().movie\r\n        let theater = theaters.find(t => t.theaterId === theaterId)  \r\n        if(!theater){\r\n            const response = await axios.get<MoviesModel[]>(appConfig.moviesByTheaterUrl + theaterId);\r\n            theaters = response.data;\r\n            console.log(theaters)\r\n        }\r\n        return theaters;\r\n    }\r\n\r\n    public async getMovieByGenre(genreId:number):Promise<MoviesModel[]>{\r\n        let genres = movieStore.getState().movie\r\n        let genre = genres.find(g => g.genreId === genreId)  \r\n        if(!genre){\r\n            const response = await axios.get<MoviesModel[]>(appConfig.moviesByGenreUrl + genreId);\r\n            genres = response.data;\r\n            console.log(genres)\r\n        }\r\n        return genres;\r\n    }\r\n\r\n    public async getOneMovie(movieId:number):Promise<MoviesModel>{\r\n        let movies = movieStore.getState().movie;\r\n        let movie = movies.find(m => m.movieId === movieId)  \r\n        if(!movie){\r\n            const response = await axios.get<MoviesModel>(appConfig.moviesUrl + movieId)\r\n            movie = response.data;\r\n            console.log(movie)\r\n        }\r\n        return movie;\r\n    \r\n    }\r\n\r\n    public async addMovie(movie:MoviesModel):Promise<void>{\r\n        // const headers = { \"Content-Type\": \"multipart/form-data\" };\r\n        const response = await axios.post<MoviesModel>(appConfig.moviesUrl, movie);\r\n        const newMovie = response.data;\r\n        console.log(newMovie)\r\n        movieStore.dispatch({type:MovieActionType.addMovie, payload: newMovie})\r\n    }\r\n\r\n    public async deleteMovie(movieId:number):Promise<void>{\r\n        await axios.delete<MoviesModel>(appConfig.moviesLikesUrl + movieId)\r\n        movieStore.dispatch({type:MovieActionType.deleteMovie, payload: movieId})\r\n    }\r\n\r\n    public async addLike(movieId:number):Promise<void>{\r\n        const response = await axios.post(appConfig.moviesLikesUrl + movieId)\r\n        const addedLike = response.data;\r\n        console.log(addedLike)\r\n        movieStore.dispatch({type:MovieActionType.Like, payload: movieId})\r\n        movieStore.dispatch({type:MovieActionType.addLike, payload: movieId})\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    public async getMoviesActive():Promise<MoviesModel[]>{\r\n        const day = new Date()[Symbol];\r\n        console.log(day);\r\n        let movies = await this.getAllMovies();\r\n        const moviesActive = movies.filter(m => new Date(m.date) === day)\r\n        console.log(moviesActive);\r\n        await this.getAllMovies();\r\n        return moviesActive;\r\n        \r\n    } \r\n\r\n}\r\n\r\nconst moviesService = new MoviesService();\r\nexport default moviesService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,oBAAoB;AAE1C,SAASC,eAAe,EAAEC,UAAU,QAAQ,qBAAqB;AACjE,SAASC,iBAAiB,EAAEC,YAAY,QAAQ,uBAAuB;AACvE,SAASC,eAAe,EAAEC,UAAU,QAAQ,qBAAqB;AAGjE,MAAMC,aAAa;EAEf,MAAaC,cAAc,GAA2B;IAClD,IAAIC,OAAO,GAAGL,YAAY,CAACM,QAAQ,EAAE,CAACD,OAAO;IAC7C,IAAGA,OAAO,CAACE,MAAM,KAAK,CAAC,EAAC;MACpB,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAkBb,SAAS,CAACc,WAAW,CAAC;MACxEL,OAAO,GAAGG,QAAQ,CAACG,IAAI;MACvBC,OAAO,CAACC,GAAG,CAACR,OAAO,CAAC;MACpBL,YAAY,CAACc,QAAQ,CAAC;QAAEC,IAAI,EAAEhB,iBAAiB,CAACK,cAAc;QAAEY,OAAO,EAAEX;MAAQ,CAAC,CAAC;IACvF;IACA,OAAOA,OAAO;EAClB;EAIA,MAAaY,YAAY,GAAwB;IAC7C,IAAIC,KAAK,GAAGhB,UAAU,CAACI,QAAQ,EAAE,CAACY,KAAK;IACvC,IAAGA,KAAK,CAACX,MAAM,KAAK,CAAC,EAAC;MAClB,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAeb,SAAS,CAACuB,SAAS,CAAC;MACnED,KAAK,GAAGV,QAAQ,CAACG,IAAI;MACrBC,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;MAClBhB,UAAU,CAACY,QAAQ,CAAC;QAAEC,IAAI,EAAEd,eAAe,CAACgB,YAAY;QAAED,OAAO,EAAEE;MAAM,CAAC,CAAC;IAC/E;IACA,OAAOA,KAAK;EAChB;EAEA,MAAaE,YAAY,GAAyB;IAC9C,IAAIC,KAAK,GAAGvB,UAAU,CAACQ,QAAQ,EAAE,CAACe,KAAK;IACvC,IAAGA,KAAK,CAACd,MAAM,KAAK,CAAC,EAAC;MAClB,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAgBb,SAAS,CAAC0B,SAAS,CAAC;MACpE,MAAMD,KAAK,GAAGb,QAAQ,CAACG,IAAI;MAC3BC,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;MAClBvB,UAAU,CAACgB,QAAQ,CAAC;QAAEC,IAAI,EAAElB,eAAe,CAACuB,YAAY;QAAEJ,OAAO,EAAEK;MAAM,CAAC,CAAC;IAC/E;IACI,OAAOA,KAAK;EAEpB;EAEA,MAAaE,iBAAiB,CAACC,SAAgB,EAAwB;IACnE,IAAIC,QAAQ,GAAG3B,UAAU,CAACQ,QAAQ,EAAE,CAACe,KAAK;IAC1C,IAAIhB,OAAO,GAAGoB,QAAQ,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,SAAS,KAAKA,SAAS,CAAC;IAC3D,IAAG,CAACnB,OAAO,EAAC;MACR,MAAMG,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAgBb,SAAS,CAACgC,kBAAkB,GAAGJ,SAAS,CAAC;MACzFC,QAAQ,GAAGjB,QAAQ,CAACG,IAAI;MACxBC,OAAO,CAACC,GAAG,CAACY,QAAQ,CAAC;IACzB;IACA,OAAOA,QAAQ;EACnB;EAEA,MAAaI,eAAe,CAACC,OAAc,EAAwB;IAC/D,IAAIC,MAAM,GAAGjC,UAAU,CAACQ,QAAQ,EAAE,CAACe,KAAK;IACxC,IAAIH,KAAK,GAAGa,MAAM,CAACL,IAAI,CAACM,CAAC,IAAIA,CAAC,CAACF,OAAO,KAAKA,OAAO,CAAC;IACnD,IAAG,CAACZ,KAAK,EAAC;MACN,MAAMV,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAgBb,SAAS,CAACqC,gBAAgB,GAAGH,OAAO,CAAC;MACrFC,MAAM,GAAGvB,QAAQ,CAACG,IAAI;MACtBC,OAAO,CAACC,GAAG,CAACkB,MAAM,CAAC;IACvB;IACA,OAAOA,MAAM;EACjB;EAEA,MAAaG,WAAW,CAACC,OAAc,EAAsB;IACzD,IAAIC,MAAM,GAAGtC,UAAU,CAACQ,QAAQ,EAAE,CAACe,KAAK;IACxC,IAAIA,KAAK,GAAGe,MAAM,CAACV,IAAI,CAACW,CAAC,IAAIA,CAAC,CAACF,OAAO,KAAKA,OAAO,CAAC;IACnD,IAAG,CAACd,KAAK,EAAC;MACN,MAAMb,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAcb,SAAS,CAAC0B,SAAS,GAAGa,OAAO,CAAC;MAC5Ed,KAAK,GAAGb,QAAQ,CAACG,IAAI;MACrBC,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;IACtB;IACA,OAAOA,KAAK;EAEhB;EAEA,MAAaiB,QAAQ,CAACjB,KAAiB,EAAe;IAClD;IACA,MAAMb,QAAQ,GAAG,MAAMb,KAAK,CAAC4C,IAAI,CAAc3C,SAAS,CAAC0B,SAAS,EAAED,KAAK,CAAC;IAC1E,MAAMmB,QAAQ,GAAGhC,QAAQ,CAACG,IAAI;IAC9BC,OAAO,CAACC,GAAG,CAAC2B,QAAQ,CAAC;IACrB1C,UAAU,CAACgB,QAAQ,CAAC;MAACC,IAAI,EAAClB,eAAe,CAACyC,QAAQ;MAAEtB,OAAO,EAAEwB;IAAQ,CAAC,CAAC;EAC3E;EAEA,MAAaC,WAAW,CAACN,OAAc,EAAe;IAClD,MAAMxC,KAAK,CAAC+C,MAAM,CAAc9C,SAAS,CAAC+C,cAAc,GAAGR,OAAO,CAAC;IACnErC,UAAU,CAACgB,QAAQ,CAAC;MAACC,IAAI,EAAClB,eAAe,CAAC4C,WAAW;MAAEzB,OAAO,EAAEmB;IAAO,CAAC,CAAC;EAC7E;EAEA,MAAaS,OAAO,CAACT,OAAc,EAAe;IAC9C,MAAM3B,QAAQ,GAAG,MAAMb,KAAK,CAAC4C,IAAI,CAAC3C,SAAS,CAAC+C,cAAc,GAAGR,OAAO,CAAC;IACrE,MAAMU,SAAS,GAAGrC,QAAQ,CAACG,IAAI;IAC/BC,OAAO,CAACC,GAAG,CAACgC,SAAS,CAAC;IACtB/C,UAAU,CAACgB,QAAQ,CAAC;MAACC,IAAI,EAAClB,eAAe,CAACiD,IAAI;MAAE9B,OAAO,EAAEmB;IAAO,CAAC,CAAC;IAClErC,UAAU,CAACgB,QAAQ,CAAC;MAACC,IAAI,EAAClB,eAAe,CAAC+C,OAAO;MAAE5B,OAAO,EAAEmB;IAAO,CAAC,CAAC;EAIzE;EAGA,MAAaY,eAAe,GAAyB;IACjD,MAAMC,GAAG,GAAG,IAAIC,IAAI,EAAE,CAACC,MAAM,CAAC;IAC9BtC,OAAO,CAACC,GAAG,CAACmC,GAAG,CAAC;IAChB,IAAIZ,MAAM,GAAG,MAAM,IAAI,CAAChB,YAAY,EAAE;IACtC,MAAM+B,YAAY,GAAGf,MAAM,CAACgB,MAAM,CAACf,CAAC,IAAI,IAAIY,IAAI,CAACZ,CAAC,CAACgB,IAAI,CAAC,KAAKL,GAAG,CAAC;IACjEpC,OAAO,CAACC,GAAG,CAACsC,YAAY,CAAC;IACzB,MAAM,IAAI,CAAC/B,YAAY,EAAE;IACzB,OAAO+B,YAAY;EAEvB;AAEJ;AAEA,MAAMG,aAAa,GAAG,IAAInD,aAAa,EAAE;AACzC,eAAemD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}