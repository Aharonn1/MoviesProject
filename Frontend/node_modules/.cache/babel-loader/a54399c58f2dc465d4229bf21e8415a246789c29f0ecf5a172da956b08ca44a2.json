{"ast":null,"code":"import { createStore } from \"redux\";\nexport class MovieState {\n  constructor() {\n    this.movie = [];\n  }\n}\nexport let MovieActionType;\n(function (MovieActionType) {\n  MovieActionType[\"getAllMovies\"] = \"getAllMovies\";\n  MovieActionType[\"getMovieByTheater\"] = \"getMovieByTheater\";\n  MovieActionType[\"addMovie\"] = \"addMovie\";\n  MovieActionType[\"deleteMovie\"] = \"deleteMovie\";\n})(MovieActionType || (MovieActionType = {}));\nexport function movieReducer() {\n  let currentState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new MovieState();\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const newState = {\n    ...currentState\n  };\n  switch (action.type) {\n    case MovieActionType.getAllMovies:\n      newState.movie = action.payload;\n      break;\n    case MovieActionType.addMovie:\n      newState.movie.push(action.payload);\n      break;\n    case MovieActionType.deleteMovie:\n      const indexToDelete = newState.movie.findIndex(p => p.movieId === action.payload);\n      if (indexToDelete >= 0) {\n        newState.movie.splice(indexToDelete, 1);\n      }\n      break;\n  }\n  return newState;\n}\nexport const movieStore = createStore(movieReducer);","map":{"version":3,"names":["createStore","MovieState","movie","MovieActionType","movieReducer","currentState","action","newState","type","getAllMovies","payload","addMovie","push","deleteMovie","indexToDelete","findIndex","p","movieId","splice","movieStore"],"sources":["C:/Users/User/Desktop/javascript/tirgulhomeday9/Frontend/src/Redux/MovieRedux.ts"],"sourcesContent":["import { createStore } from \"redux\";\r\nimport MoviesModel from \"../Models/movies-model\";\r\n\r\nexport class MovieState{\r\n    public movie: MoviesModel[] = [];\r\n}\r\n\r\nexport enum MovieActionType{\r\n    getAllMovies = \"getAllMovies\",\r\n    getMovieByTheater = \"getMovieByTheater\",\r\n    addMovie = \"addMovie\",\r\n    deleteMovie = \"deleteMovie\",\r\n    \r\n}\r\n\r\nexport interface MovieAction {\r\n    type: MovieActionType;\r\n    payload: any;\r\n}\r\n\r\nexport function movieReducer(currentState = new MovieState(), action: MovieAction): MovieState {\r\n    const newState = { ...currentState }\r\n\r\n    switch (action.type) {\r\n        case MovieActionType.getAllMovies:\r\n            newState.movie = action.payload\r\n            break;\r\n\r\n        case MovieActionType.addMovie:\r\n            newState.movie.push(action.payload)\r\n\r\n            break;\r\n\r\n        case MovieActionType.deleteMovie:\r\n            const indexToDelete = newState.movie.findIndex(p => p.movieId === action.payload)\r\n            if (indexToDelete >= 0) {\r\n                newState.movie.splice(indexToDelete, 1)\r\n            }\r\n            break;\r\n        }\r\n\r\n        return newState\r\n    }\r\n\r\n    export const movieStore = createStore(movieReducer);"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AAGnC,OAAO,MAAMC,UAAU;EAAA;IAAA,KACZC,KAAK,GAAkB,EAAE;EAAA;AACpC;AAEA,WAAYC,eAAe;AAM1B,WANWA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;AAAA,GAAfA,eAAe,KAAfA,eAAe;AAa3B,OAAO,SAASC,YAAY,GAAmE;EAAA,IAAlEC,YAAY,uEAAG,IAAIJ,UAAU,EAAE;EAAA,IAAEK,MAAmB;EAC7E,MAAMC,QAAQ,GAAG;IAAE,GAAGF;EAAa,CAAC;EAEpC,QAAQC,MAAM,CAACE,IAAI;IACf,KAAKL,eAAe,CAACM,YAAY;MAC7BF,QAAQ,CAACL,KAAK,GAAGI,MAAM,CAACI,OAAO;MAC/B;IAEJ,KAAKP,eAAe,CAACQ,QAAQ;MACzBJ,QAAQ,CAACL,KAAK,CAACU,IAAI,CAACN,MAAM,CAACI,OAAO,CAAC;MAEnC;IAEJ,KAAKP,eAAe,CAACU,WAAW;MAC5B,MAAMC,aAAa,GAAGP,QAAQ,CAACL,KAAK,CAACa,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,KAAKX,MAAM,CAACI,OAAO,CAAC;MACjF,IAAII,aAAa,IAAI,CAAC,EAAE;QACpBP,QAAQ,CAACL,KAAK,CAACgB,MAAM,CAACJ,aAAa,EAAE,CAAC,CAAC;MAC3C;MACA;EAAM;EAGV,OAAOP,QAAQ;AACnB;AAEA,OAAO,MAAMY,UAAU,GAAGnB,WAAW,CAACI,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}