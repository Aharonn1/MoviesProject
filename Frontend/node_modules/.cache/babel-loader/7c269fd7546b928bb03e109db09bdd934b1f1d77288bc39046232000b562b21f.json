{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\javascript\\\\tirgulhomeday9\\\\Frontend\\\\src\\\\Components\\\\DataArea\\\\Insert\\\\Insert.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport notify from \"../../../Utils/Notify\";\nimport \"./Insert.css\";\nimport moviesService from \"../../../Services/movies-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Insert() {\n  _s();\n  const [movie, setMovie] = useState();\n  const [theater, setThread] = useState([]);\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const navigate = useNavigate();\n  async function send(movie) {\n    try {\n      const newMovie = await moviesService.addMovie(movie);\n      navigate(\"/list\");\n      // setMovie(newMovie)\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n  useEffect(() => {\n    moviesService.getAllTheaters().then(theater => setThread(theater)).catch(err => notify.error(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Insert\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(send),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(\"name\"),\n        required: true,\n        minLength: 3,\n        maxLength: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Length\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(\"length\"),\n        required: true,\n        minLength: 1,\n        maxLength: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        ...register(\"time\"),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Insert, \"Q6dkjxNJjZKyEcQcL+dMHw0gcb8=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = Insert;\nexport default Insert;\nvar _c;\n$RefreshReg$(_c, \"Insert\");","map":{"version":3,"names":["useEffect","useState","useForm","useNavigate","notify","moviesService","Insert","movie","setMovie","theater","setThread","register","handleSubmit","navigate","send","newMovie","addMovie","err","error","getAllTheaters","then","catch"],"sources":["C:/Users/User/Desktop/javascript/tirgulhomeday9/Frontend/src/Components/DataArea/Insert/Insert.tsx"],"sourcesContent":["import { ChangeEvent, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport notify from \"../../../Utils/Notify\";\nimport \"./Insert.css\";\nimport { request } from \"http\";\nimport MoviesModel from \"../../../Models/movies-model\";\nimport moviesService from \"../../../Services/movies-service\";\nimport TheatersModel from \"../../../Models/theatersId-model\";\n\n\nfunction Insert(): JSX.Element {\n\n    const[movie,setMovie] = useState<MoviesModel>();\n    const[theater,setThread] = useState<TheatersModel[]>([]);\n    const{register,handleSubmit} = useForm<MoviesModel>();\n    const navigate = useNavigate();\n\n    async function send(movie:MoviesModel) {\n        try{\n            const newMovie = await moviesService.addMovie(movie)\n            navigate(\"/list\")\n            // setMovie(newMovie)\n        }catch(err:any){\n            notify.error(err)\n        }\n    }\n\n    useEffect(()=>{\n        moviesService.getAllTheaters()\n        .then(theater => setThread(theater))\n        .catch(err => notify.error(err))\n    },[])\n\n\n    return (\n        <div className=\"Insert\">\n            <h1>add</h1>\n            <form onSubmit={handleSubmit(send)}>\n                {/* <select defaultValue=\"\" {...register(\"theaterId\")} required>\n                    <option disabled value=\"\">select theater</option>\n                    {theater.map(t => <option key={t.theaterId} value={t.theaterId}>{t.theaterName}</option>)}\n                </select>  */}\n                <label>Name</label>\n                <input type=\"text\"{...register(\"name\")} required minLength={3} maxLength={20}/>\n                <br />\n                <label>Length</label>\n                <input type=\"text\"{...register(\"length\")} required minLength={1} maxLength={10}/>\n                <br />\n                <label>Time</label>\n                <input type=\"date\"{...register(\"time\")} required/>\n                <br />\n                <button>Add</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Insert;\n"],"mappings":";;AAAA,SAAsBA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,QAAmB,kBAAkB;AACzD,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAO,cAAc;AAGrB,OAAOC,aAAa,MAAM,kCAAkC;AAAC;AAI7D,SAASC,MAAM,GAAgB;EAAA;EAE3B,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGP,QAAQ,EAAe;EAC/C,MAAK,CAACQ,OAAO,EAACC,SAAS,CAAC,GAAGT,QAAQ,CAAkB,EAAE,CAAC;EACxD,MAAK;IAACU,QAAQ;IAACC;EAAY,CAAC,GAAGV,OAAO,EAAe;EACrD,MAAMW,QAAQ,GAAGV,WAAW,EAAE;EAE9B,eAAeW,IAAI,CAACP,KAAiB,EAAE;IACnC,IAAG;MACC,MAAMQ,QAAQ,GAAG,MAAMV,aAAa,CAACW,QAAQ,CAACT,KAAK,CAAC;MACpDM,QAAQ,CAAC,OAAO,CAAC;MACjB;IACJ,CAAC,QAAMI,GAAO,EAAC;MACXb,MAAM,CAACc,KAAK,CAACD,GAAG,CAAC;IACrB;EACJ;EAEAjB,SAAS,CAAC,MAAI;IACVK,aAAa,CAACc,cAAc,EAAE,CAC7BC,IAAI,CAACX,OAAO,IAAIC,SAAS,CAACD,OAAO,CAAC,CAAC,CACnCY,KAAK,CAACJ,GAAG,IAAIb,MAAM,CAACc,KAAK,CAACD,GAAG,CAAC,CAAC;EACpC,CAAC,EAAC,EAAE,CAAC;EAGL,oBACI;IAAK,SAAS,EAAC,QAAQ;IAAA,wBACnB;MAAA,UAAI;IAAG;MAAA;MAAA;MAAA;IAAA,QAAK,eACZ;MAAM,QAAQ,EAAEL,YAAY,CAACE,IAAI,CAAE;MAAA,wBAK/B;QAAA,UAAO;MAAI;QAAA;QAAA;QAAA;MAAA,QAAQ,eACnB;QAAO,IAAI,EAAC,MAAM;QAAA,GAAIH,QAAQ,CAAC,MAAM,CAAC;QAAE,QAAQ;QAAC,SAAS,EAAE,CAAE;QAAC,SAAS,EAAE;MAAG;QAAA;QAAA;QAAA;MAAA,QAAE,eAC/E;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAA,UAAO;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ,eACrB;QAAO,IAAI,EAAC,MAAM;QAAA,GAAIA,QAAQ,CAAC,QAAQ,CAAC;QAAE,QAAQ;QAAC,SAAS,EAAE,CAAE;QAAC,SAAS,EAAE;MAAG;QAAA;QAAA;QAAA;MAAA,QAAE,eACjF;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAA,UAAO;MAAI;QAAA;QAAA;QAAA;MAAA,QAAQ,eACnB;QAAO,IAAI,EAAC,MAAM;QAAA,GAAIA,QAAQ,CAAC,MAAM,CAAC;QAAE,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAE,eAClD;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAA,UAAQ;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACjB;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEd;AAAC,GA7CQL,MAAM;EAAA,QAIoBJ,OAAO,EACrBC,WAAW;AAAA;AAAA,KALvBG,MAAM;AA+Cf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}